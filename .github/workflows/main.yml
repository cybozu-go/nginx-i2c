name: main
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'

env:
  go-version: stable

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}
      - name: Test
        run: make test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}
      - name: Lint
        run: make lint
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}
      - name: Build
        run: make build
      - name: Verify output
        env:
          MAXMIND_LICENSE: ${{ secrets.MAXMIND_LICENSE }}
        run: |
          ./work/nginx-i2c -t ${MAXMIND_LICENSE} -o ./t/ip2country.conf
          test $(wc -l <./t/ip2country.conf) -ge 10000
      - name: Persist to cache
        uses: actions/cache/save@v3
        with:
          path: ./t/ip2country.conf
          key: ${{ runner.os }}-ip2country-${{ github.run_id }}
  test-nginx:
    name: Test with nginx
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./t/ip2country.conf
          key: ${{ runner.os }}-ip2country-${{ github.run_id }}
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends ca-certificates
      - name: Ensure nginx can read generated file
        run: sudo nginx -c $(pwd)/t/nginx.conf -t
